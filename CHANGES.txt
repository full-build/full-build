v4.2
  * baseline is tagless on repositories
  * query cycle between repositories

v4.1
  * apps are supported in repositories
  * add minimal support for Mercurial
  * add minimal support for Subversion

v4.0
  * Better support for NuGet
  * Fix outstanding issues with Xamarin Studio and Visual Studio on macOS
  * Get rid of $(FBWorkspaceDir) as NCrunch does not work anyway
  * Tag for baseline (issue #114)
  * Support for .fbignore to avoid deleting files on conversion (issue #147)
  * --verbose option to display more information on crash
  * Projects are managed per repository (issue #111)
  * Breaking changes for some commands (view/repo/app before verb)
  * Enhanced help
  * New environment variables for exec: FB_REPO_BRANCH and FB_BRANCH
  * Commands have undergo a lot of changes
  * Index/convert is dead, long live convert !
  * Fix misplaced import full-build target
  * Doctor takes care of workspace sanity !

v3.1
  * Create view from application (issue #112)
  * Support for PackageReference (issue #119)
  * Remove Mercurial support (issue #125)
  * List applications with version (issue #129)
  * Static views support (issue #131)
  * --mt is default for clone, pull & publish (issue #128)
  * Fix conversion performance (issue #133)
  * Fix view creation performance (issue #144)
  * Support for NuGet application (issue #143)
  * Fix pulling binaries must use current baseline (#86)
  * Anthology queries
  * Fix broken baseline when repository is dropped (issue #139)
  * Fix drop repo (issue #145)
  * Support for pull --latest-bin (issue #86)
  * Support for NuGet application (issue #143)

v3.0
  * Graph api use internally to simplify implementation
  * Solution gen based on graph 
  * Dgml gen based on graph
  * Builder based on graph
  * Caching implementation in graph leading to vastly improved performance
  * Workspace commands are using graph api
  * Repo commands are using graph api
  * Test commands are using graph api
  * App commands are using graph api
  * Package commands are using graph api
  * NuGet commands are using graph api
  * Partial build over modified repositories using graph api
  * Split Plumbing modules into Plumbing & Anthology
  * Env, Configuration & Anthology modules usage limited
  * Parallel pull of repositories (pull --mt)
  * Can upgrade with alpha & beta environment
  * Package management is using graph api
  * Build process cleanup
