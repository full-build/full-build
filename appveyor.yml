
#
# branch convention:
# master : stable package
# beta/* : beta package
# * : alpha package
#
# this build does not push to NuGet - go to appveyor deployment interface and perform manual deployment
#

os: Visual Studio 2017

environment:
  GITHUB_TOKEN:
    secure: SNU7aaT74dbTXWCsWeFxWvfwJ4BLItFdO2EY7MYoEg9vec2EGBloH8PNDpkJbBKg

version: 4.2.{build}

skip_tags: true

init:
  - ps: |
      If ($env:APPVEYOR_REPO_BRANCH -like "beta/*") {
          $version = "$env:APPVEYOR_BUILD_VERSION"
          $verStatus = "-beta"
      }
      If ($version) {
          $env:APPVEYOR_BUILD_VERSION = $version
          $env:BUILD_VERSION_STATUS = $verStatus
          Update-AppveyorBuild -Version "$version"
          Set-AppveyorBuildVariable -Name BUILD_VERSION_STATUS -Value $env:BUILD_VERSION_STATUS
      } Else {
          $version = "$env:APPVEYOR_BUILD_VERSION"
          $verStatus = "-alpha"
	  }
      Write-Host "Building version $env:APPVEYOR_BUILD_VERSION $env:BUILD_VERSION_STATUS"

shallow_clone: false

build_script:
  - cmd: build.cmd %APPVEYOR_BUILD_VERSION% %BUILD_VERSION_STATUS%
  - cmd: run-qa.cmd

test_script:
  - ps: . .\Push-TestResult.ps1

artifacts:
  - path: apps/full-build.zip
    name: app

  - path: apps/*.nupkg
    name: nuget
      
notifications:
  - provider: GitHubPullRequest
    auth_token:
      secure: jFxLxYAyEMeg/TrfZ4oelM/HvdNR4ZtpiZYAqRrljzFdwiWBktkzh3N/UWLkFxpo
    template: '{{#passed}}:white_check_mark:{{/passed}}{{#failed}}:x:{{/failed}} [Build {{&projectName}} {{buildVersion}} {{status}}]({{buildUrl}}) (commit {{commitUrl}} by @{{&commitAuthorUsername}})'

  - provider: Slack
    incoming_webhook:
      secure: gA2eVzMFIFRHZpWx6bDTbKCKGFOWEe3zRukzC4PTWklKnLTsIzm/TLqa/oGgPSFiSR7DsBLKpp1Tkd4eIEy2QlzqAwFx4IknxGh4igmbB7k=
    channel: '#builds'
